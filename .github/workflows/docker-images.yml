name: Build Docker Images

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*.*.*' ]
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_CPU: ${{ github.repository_owner }}/emacs-latex
  IMAGE_GPU: ${{ github.repository_owner }}/emacs-latex-gpu
  DUSER: docker-user
  DGROUP: docker-user
  DUID: "1000"
  DGID: "1000"

jobs:
  build-and-push:
    name: Build and Push (${{ matrix.flavor }})
    runs-on: ${{ matrix.labels }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - flavor: cpu
            image_name: emacs-latex
            base_image: ubuntu:24.04
            with_gpu: "false"
            labels: [x64, linux]
          - flavor: gpu
            image_name: emacs-latex-gpu
            base_image: nvidia/cuda:13.0.1-cudnn-devel-ubuntu24.04
            with_gpu: "true"
            labels: [x64, linux]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prune Docker
        run: |
          docker system prune -af || true
          docker buildx prune -af || true

      - name: Build and push via run.sh
        env:
          DUSER: ${{ env.DUSER }}
          DGROUP: ${{ env.DGROUP }}
          DUID: ${{ env.DUID }}
          DGID: ${{ env.DGID }}
          DOCKER_DEFAULT_PLATFORM: linux/amd64
        run: |
          set -euo pipefail
          chmod +x ./run.sh
          GPU_FLAG=""
          if [ "${{ matrix.with_gpu }}" = "true" ]; then
            GPU_FLAG="-g"
          fi
          ./run.sh -b -p -r ${GPU_FLAG}
